apply plugin: 'com.android.application'
apply plugin: 'realm-android'
apply plugin: "com.github.b3er.local.properties"

def KEYSTORE_FILE = rootProject.file('scripts/key.jks')
def TRAVIS_BUILD = System.getenv("TRAVIS") == "true" && KEYSTORE_FILE.exists()
def LOCAL_KEY_PRESENT = project.hasProperty('SIGNING_KEY_FILE') && rootProject.file(SIGNING_KEY_FILE).exists()

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "io.pslab"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 21
        versionName "2.0.20"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        if (TRAVIS_BUILD) {
            release {
                storeFile KEYSTORE_FILE
                storePassword System.getenv("STORE_PASS")
                keyAlias System.getenv("ALIAS")
                keyPassword System.getenv("KEY_PASS")
            }
        } else if (LOCAL_KEY_PRESENT) {
            release {
                storeFile rootProject.file(SIGNING_KEY_FILE)
                storePassword STORE_PASS
                keyAlias ALIAS
                keyPassword KEY_PASS
            }
        }
    }

    buildTypes {
        debug {
            versionNameSuffix "Version: "
            resValue "string", "version", "${versionNameSuffix}${defaultConfig.versionName}"
            resValue "string", "google_maps_key", google_key
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "version", "${defaultConfig.versionName}"
            resValue "string", "google_maps_key", google_key
            if (LOCAL_KEY_PRESENT || TRAVIS_BUILD)
                signingConfig signingConfigs.release
        }
    }
    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    flavorDimensions 'default'
    productFlavors {
        fdroid {
            resValue "string", "flavor", "Fdroid version"
            dimension = 'default'
        }
        playstore {
            resValue "string", "flavor", "Play Store version"
            dimension = 'default'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Android stock libraries
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.android.support:support-v13:$rootProject.supportLibraryVersion"
    implementation "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    implementation "com.android.support:preference-v14:$rootProject.supportLibraryVersion"
    implementation "com.android.support:customtabs:$rootProject.supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraintLayoutVersion"

    // Custom tools libraries
    implementation "com.github.PhilJay:MPAndroidChart:$rootProject.mpAndroidChartVersion"
    implementation "com.github.bmelnychuk:atv:$rootProject.atvVersion"
    implementation "de.hdodenhof:circleimageview:$rootProject.circleImageViewVersion"
    implementation "com.github.devlight.navigationtabstrip:navigationtabstrip:$rootProject.navTabStripVersion"
    implementation "com.afollestad.material-dialogs:core:$rootProject.materialDialogsVersion"
    implementation "com.github.medyo:android-about-page:$rootProject.androidAboutPageVersion"
    implementation "com.github.tiagohm.MarkdownView:library:$rootProject.markDownViewVersion"
    implementation "com.github.mirrajabi:search-dialog:$rootProject.searchDialogVersion"
    implementation "com.sdsmdg.harjot:croller:$rootProject.crollerVersion"
    implementation "com.github.BeppiMenozzi:Knob:$rootProject.knobLibraryVersion"
    implementation "com.github.warkiz.widget:indicatorseekbar:$rootProject.seekBarLibraryVersion"
    implementation "com.github.Vatican-Cameos:CarouselPicker:$rootProject.carouselPickerVersion"
    implementation "com.github.anastr:speedviewlib:$rootProject.speedView"

    implementation "org.apache.commons:commons-math3:$rootProject.commonMathVersion"
    implementation "org.apache.commons:commons-lang3:$rootProject.commonLangVersion"
    implementation "com.squareup.picasso:picasso:$rootProject.picassoVersion"

    implementation 'com.github.GoodieBag:ProtractorView:v1.2'
    implementation 'com.github.Triggertrap:SeekArc:v1.1'

    implementation "com.squareup.okhttp3:okhttp:$rootProject.okHttpVersion"

    implementation "com.jakewharton:butterknife:$rootProject.butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterKnifeVersion"

    // Map libraries
    fdroidImplementation "org.osmdroid:osmdroid-android:$rootProject.osmVersion"
    fdroidImplementation "org.osmdroid:osmdroid-mapsforge:$rootProject.mapsforgeVersion"
    fdroidImplementation "org.osmdroid:osmdroid-geopackage:$rootProject.geoPackageVersion"
    playstoreImplementation "com.google.android.gms:play-services-maps:$rootProject.googleMapsVersion"

    implementation "com.android.support:multidex:$rootProject.multiDexVersion"
    implementation "io.realm:android-adapters:$rootProject.realmAdapter"

    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation("com.android.support.test:runner:$rootProject.testRunnerRulesVersion") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation("com.android.support.test:rules:$rootProject.testRunnerRulesVersion") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation("com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation("com.android.support.test.espresso:espresso-contrib:$rootProject.espressoVersion") {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'design'
    }
}
