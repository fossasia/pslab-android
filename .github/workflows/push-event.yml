name: Push

on:
  push:
    branches:
      - master
      - development

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.branch-name.outputs.current_branch }}

    steps:
      - name: Download repository
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Prepare Build Keys
        env:
          ENCRYPTED_F10B5E0E5262_IV: ${{ secrets.ENCRYPTED_F10B5E0E5262_IV }}
          ENCRYPTED_F10B5E0E5262_KEY: ${{ secrets.ENCRYPTED_F10B5E0E5262_KEY }}
        run: |
          bash scripts/prep-key.sh

      - name: Build with Gradle
        env:
          STORE_PASS: ${{ secrets.STORE_PASS }}
          ALIAS: ${{ secrets.ALIAS }}
          KEY_PASS: ${{ secrets.KEY_PASS }}
        run: |
          bash ./gradlew build --stacktrace
          bash ./gradlew bundle --stacktrace

      - name: Upload APK Debug
        uses: actions/upload-artifact@v4
        with:
          name: APK Debug generated
          path: app/build/outputs/apk/debug

      - name: Upload APK Release
        uses: actions/upload-artifact@v4
        with:
          name: APK Release generated
          path: app/build/outputs/apk/release

      - name: Upload AAB Release
        uses: actions/upload-artifact@v4
        with:
          name: AAB Release generated
          path: app/build/outputs/bundle/release

      - name: Upload APK/AAB's to apk branch
        run: |
          git config --global user.name "${{ github.workflow }}"
          git config --global user.email "gh-actions@${{ github.repository_owner }}"
          
          git clone --branch=apk https://${{ github.repository_owner }}:${{ github.token }}@github.com/${{ github.repository }} apk
          cd apk
          
          if [[ ${{ github.ref_name }} =~ ^(master)$ ]]; then
            rm -rf *
          else
            rm -rf pslab-dev*
          fi
          ls
          
          find ../app/build/outputs -type f \( -name '*.apk' -o -name '*.aab' \) -exec cp -v {} . \;
          
          branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          
          for file in app*; do
            mv $file pslab-$branch-${file#*-}
          done
          
          git checkout --orphan temporary
          git add --all .
          git commit -am "[Auto] Update APK/AAB's from $branch ($(date +%Y-%m-%d.%H:%M:%S))"
          git branch -D apk
          git branch -m apk
          git push --force origin apk